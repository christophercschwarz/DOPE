// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// vecmult
arma::mat vecmult(arma::mat x, arma::mat y);
RcppExport SEXP _DOPE_vecmult(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(vecmult(x, y));
    return rcpp_result_gen;
END_RCPP
}
// subst
arma::mat subst(arma::mat x, int row, int column_min, int column_max);
RcppExport SEXP _DOPE_subst(SEXP xSEXP, SEXP rowSEXP, SEXP column_minSEXP, SEXP column_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type row(rowSEXP);
    Rcpp::traits::input_parameter< int >::type column_min(column_minSEXP);
    Rcpp::traits::input_parameter< int >::type column_max(column_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(subst(x, row, column_min, column_max));
    return rcpp_result_gen;
END_RCPP
}
// matprod
arma::mat matprod(arma::mat x);
RcppExport SEXP _DOPE_matprod(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(matprod(x));
    return rcpp_result_gen;
END_RCPP
}
// augment_loop
arma::mat augment_loop(arma::mat x, int n, double buff);
RcppExport SEXP _DOPE_augment_loop(SEXP xSEXP, SEXP nSEXP, SEXP buffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type buff(buffSEXP);
    rcpp_result_gen = Rcpp::wrap(augment_loop(x, n, buff));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DOPE_vecmult", (DL_FUNC) &_DOPE_vecmult, 2},
    {"_DOPE_subst", (DL_FUNC) &_DOPE_subst, 4},
    {"_DOPE_matprod", (DL_FUNC) &_DOPE_matprod, 1},
    {"_DOPE_augment_loop", (DL_FUNC) &_DOPE_augment_loop, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_DOPE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
